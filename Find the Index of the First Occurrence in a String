"Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack."
class Solution:
    def strStr(self, haystack: str, needle: str) -> int:
        m = len(needle)
        n = len(haystack)
        if haystack == needle:
            return 0
        for i in range(n - m + 1):
            for j in range(m):
                if haystack[i + j] != needle[j]:
                    break
            else:
                return i

        return -1
time complexity n^2 space complexity n^2

class Solution:
    def strStr(self, haystack: str, needle: str) -> int:
        
        m, n = len(haystack), len(needle)
        for i in range(m - n + 1):
            j = 0
            while j < n and i < m:
                if haystack[i] != needle[j]:
                    break
                i += 1
                j += 1
            i -= j
            if j == len(needle):
                return i
        return -1
    
space complexity: n, time complexity: n*m
